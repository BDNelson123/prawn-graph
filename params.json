{
  "name": "prawn-graph",
  "tagline": "Prawn::Graph adds straightforward native graph drawing to Prawn without the need to depend on anything else. All generated graphs are pure PDF Vector Images. It results in smaller document sizes and less complication.",
  "body": "# Prawn::Graph - Easy Graphing for Prawn\r\n\r\n[![Gem Version](https://badge.fury.io/rb/prawn-graph.svg)](https://badge.fury.io/rb/prawn-graph)\r\n[![License](http://img.shields.io/:license-mit-blue.svg)](http://sujrd.mit-license.org)\r\n[![Code Climate](https://codeclimate.com/github/HHRy/prawn-graph/badges/gpa.svg)](https://codeclimate.com/github/HHRy/prawn-graph)\r\n[![Test Coverage](https://codeclimate.com/github/HHRy/prawn-graph/badges/coverage.svg)](https://codeclimate.com/github/HHRy/prawn-graph/coverage)\r\n[![Build Status](https://travis-ci.org/HHRy/prawn-graph.svg?branch=master)](https://travis-ci.org/HHRy/prawn-graph)\r\n[![security](https://hakiri.io/github/HHRy/prawn-graph/master.svg)](https://hakiri.io/github/HHRy/prawn-graph/master)\r\n![Maintained: yes](https://img.shields.io/badge/maintained-yes-brightgreen.png)\r\n\r\nAn extension for the [prawn pdf library][5] which adds the ability to draw graphs (or charts if\r\nyou perfer) in PDF documents.\r\n\r\nBecause Prawn::Graph only uses the native PDF drawing functions exposed by Prawn, it removes the need to \r\ndepend on projects like Gruff to generate heavy PNG / JPG images of such graphs and charts and then include\r\nthose large blobs in your documents. The results may not be as pretty (yet), but the file-size differences \r\nare dramatic.\r\n\r\nBy default, graphs are drawn in monochrome, as that's likely how they will be printed. \r\n\r\nThis is free and open source software released under ther terms of the [MIT Licence](http://opensource.org/licenses/MIT).\r\n\r\nIts copyright is held by Ryan Stenhouse and the [other contributors][8] and it was first released in \r\n2010.\r\n\r\n## Compatibility\r\n\r\nThis gem is built assuming a Ruby version of 2.0 or higher. Older Ruby versions may work but are not \r\nofficially supported. We aim for compatibilty with 1.x and 2.x series of prawn. Any incomaptibilities\r\nwith prawn versions should be treated as bugs and added to the [issue tracker][2]. \r\n\r\nWe build automatically using Travis CI. Our [.travis.yml][9] file targets the same Ruby versions as\r\n[prawn itself][5] does.\r\n\r\n\r\n### Legacy support and deprecation notices.\r\n\r\nTo provide backwards-compatibility (of sorts), `prawn-graph` provides `bar_graph` (aliased as `bar_chart`)\r\nand `line_graph` (aliased as `line_chart`) methods as part of its interface which function the same as their\r\nequivalents in version `0.0.4`. These methods are, however, deprecated and **will** be removed when version\r\n`1.0.0` is released. Using these methods will result in a `warn` level message from Ruby.\r\n\r\nThese legacy methods will still be buggy as they are using the same rendering methods as before. Where possible\r\nyou should use the new `graph` (aliased as `chart`) interface. Unless serious problems are uncovered, bugs\r\nreported with legacy rendering **will not be considered**.\r\n\r\nUnlike previous versions of `prawn-graph`, this version does not at this time include a theme api or the \r\nability to change the colors used to render the graph. \r\n\r\n## Installation\r\n\r\nTo use prawn-graph, you can add the following to your `Gemfile`:\r\n\r\n```Gemfile\r\n gem 'prawn-graph', ' ~> 0.9'\r\n```\r\n\r\nAlternatively, you can use Rubygems directly: `gem install prawn-graph`.\r\n \r\n## Acknowledgements\r\n\r\nWith thanks to [株式会社アルム][3] ([Allm Inc][4]) for allowing Ryan Stenhouse the time to rebuild this version of\r\nprawn-graph. This updated version of prawn-graph was inspired and guided by [prawn-svg][1] by [Roger Nesbitt][6]. \r\n\r\nPrawn Graph was originally sponsored by and built for use at [Purchasing Card Consultancy Ltd][7] while\r\nRyan Stenhouse was employed there.\r\n\r\n## Supported graph / chart types\r\n\r\nThis version of Prawn::Graph supports the following graph / chart types:\r\n\r\n  *  Bar Charts \r\n  *  Line Charts\r\n\r\nIs your favourite chart type not supported yet? [Please request it][2], or if you are feeling particularly\r\nadventurous - please add it!\r\n\r\n## Using prawn-graph\r\n\r\n```ruby\r\n  require 'prawn-graph'\r\n\r\n  series = []\r\n  series << Prawn::Graph::Series.new([1,2,3,4,5], title: \"Some numbers\", type: :bar)\r\n\r\n  Prawn::Document.generate('test.pdf') do\r\n    graph series\r\n  end\r\n```\r\n\r\nWhen called with just a set of data, prawn-graph will do its best to make the graph fit in the \r\navailable space. For a little more control over how the graphs are rendered in the document\r\nyou can pass the following options:\r\n\r\nOption      | Data type | Description\r\n----------- | --------- | -----------\r\n:at         | [integer, integer] | Specify the location on the page you want the graph to appear.\r\n:width      | integer   | Desired width of the graph.  Defaults to horizontal space available.\r\n:height     | integer   | Desired height of the graph.  Defaults to vertical space available.\r\n\r\n### Advanced example\r\n\r\n```ruby\r\n  require 'prawn-graph'\r\n\r\n  series = []\r\n  series << Prawn::Graph::Series.new([5,4,3,2,1,1,2,8,7,5,4,9,2], title: \"A label for a series\", type: :bar)\r\n  series << Prawn::Graph::Series.new([5,4,3,2,1,1,2,8,7,5,4,9,2].reverse, title: \"Another label\", type: :bar)\r\n  series << Prawn::Graph::Series.new([1,2,3,4,5,9,6,4,5,6,3,2,9], title: \"Yet another label\", type: :bar)\r\n  series << Prawn::Graph::Series.new([1,2,3,4,5,9,6,4,5,6,3,2,9].shuffle, title: \"One final label\", type: :line)  \r\n\r\n  Prawn::Document.generate('test.pdf') do\r\n    graph series, width: 500, height: 200, title: \"A Title for the chart\", at: [10,700]\r\n  end\r\n``` \r\n\r\n### Output\r\n<img src=\"http://prawn-graph.ryanstenhouse.jp/img/prawn-graph-output.png\" alt=\"Prawn Graph Example Output\" width=\"933\" height=\"420\">\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `rake spec` to run the tests. You can\r\nalso  run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the \r\nversion number in `version.rb`, and then run `bundle exec rake release`, which will create a git tag for the version, \r\npush git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome [on GitHub][2]. This project is intended to be a \r\nsafe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) \r\ncode of conduct.\r\n\r\n\r\n\r\n[1]: https://github.com/mogest/prawn-svg/\r\n[2]: https://github.com/hhry/prawn-graph/issues/\r\n[3]: http://www.allm.net/\r\n[4]: http://www.allm.net/en/\r\n[5]: http://github.com/prawnpdf/prawn/\r\n[6]: https://github.com/mogest/\r\n[7]: http://www.pccl.co.uk/\r\n[8]: https://github.com/HHRy/prawn-graph/blob/master/CONTRIBUTORS.md\r\n[9]: https://github.com/HHRy/prawn-graph/blob/master/.travis.yml\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
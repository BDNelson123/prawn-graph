{
  "name": "Prawn-graph",
  "tagline": "Prawn::Graph adds straightforward native graph drawing to Prawn without the need to depend on anything else. All generated graphs are pure PDF Vector Images. It results in smaller document sizes and less complication.",
  "body": "# Prawn::Graph - Easy Graphing for Prawn\r\n\r\n[![Gem Version](https://badge.fury.io/rb/prawn-graph.svg)](https://badge.fury.io/rb/prawn-graph)\r\n[![License](http://img.shields.io/:license-mit-blue.svg)](http://sujrd.mit-license.org)\r\n\r\nAn extension for the [prawn pdf library][5] which adds the ability to draw graphs (or charts if\r\nyou perfer) in PDF documents.\r\n\r\nBecause Prawn::Graph only uses the native PDF drawing functions exposed by Prawn, it removes the need to \r\ndepend on projects like Gruff to generate heavy PNG / JPG images of such graphs and charts and then include\r\nthose large blobs in your documents. The results may not be as pretty (yet), but the file-size differences \r\nare dramatic.\r\n\r\nBy default, graphs are drawn in monochrome, as that's likely how they will be printed. \r\n\r\n## Compatibility\r\n\r\nThe gem is  only tested against Ruby version 2.0 and greater. Older Ruby versions may work but are not \r\nofficially supported. We aim for compatibilty with 1.x and 2.x series of prawn. Any incomaptibilities\r\nshould be treated as bugs and added to the [issue tracker][2]. \r\n\r\nUnlike previous version of prawn-graph, this version does not at this time include a theme api or the \r\nability to change the colors used to render the graph. \r\n\r\n\r\n## IMPORTANT - READ THIS BEFORE USING\r\n\r\nprawn-graph is currently being rewritten to have its internal components replaced with new, properly\r\ntest-driven bits of code to draw the various cool graphs and charts that people would like to use in\r\ntheir PDFs.\r\n\r\nRight now, the \"legacy\" drawing code is what is ultimately being used to render any graphs being \r\ngenerated. The newness instead is that project is compatible with all modern versions of prawn and\r\ntherefore are useful again.\r\n\r\nThis means that for now any existing rendering bugs still remain. If you find any, please be\r\n[a good citizen][2] and [report them][2].\r\n\r\nTo use prawn-graph with these caveats, you can add the following to your `Gemfile`:\r\n\r\n```Gemfile\r\n gem 'prawn-graph', '1.0.0.pre1'\r\n```\r\n\r\nAlternatively, you can use Rubygems directly: `gem install prawn-graph --pre`.\r\n \r\n## Acknowledgements\r\n\r\nWith thanks to [株式会社アルム][3] ([Allm Inc][4]) for allowing Ryan Stenhouse the time to rebuild this version of\r\nprawn-graph. This updated version of prawn-graph was inspired and guided by [prawn-svg][1] by [Roger Nesbitt][6]. \r\nIt also uses some of [prawn-svg][1]'s document size calculation code.\r\n\r\n## Supported graph / chart types\r\n\r\nThis version of Prawn::Graph supports the following graph / chart types:\r\n\r\n  *  Bar Charts \r\n  *  Line Charts\r\n\r\nIs your favourite chart type not supported yet? [Please request it][2], or if you are feeling particularly\r\nadventurous - please add it!\r\n\r\n## Using prawn-graph\r\n\r\n```ruby\r\n  require 'prawn-graph'\r\n\r\n  data = [ ['A', 10], ['B', 11], ['C', 12] ]\r\n\r\n  Prawn::Document.generate('test.pdf') do\r\n    text 'Graph Example'\r\n    bar_graph data\r\n  end\r\n```\r\n\r\nWhen called with just a set of data, prawn-graph will do its best to make the graph fit in the \r\navailable space. For a little more control over how the graphs are rendered in the document\r\nyou can pass the following options:\r\n\r\nOption      | Data type | Description\r\n----------- | --------- | -----------\r\n:at         | [integer, integer] | Specify the location on the page you want the graph to appear.\r\n:width      | integer   | Desired width of the graph.  Defaults to horizontal space available.\r\n:height     | integer   | Desired height of the graph.  Defaults to vertical space available.\r\n\r\n### Example\r\n\r\n```ruby\r\n  require 'prawn-graph'\r\n\r\n  data = [ ['A', 10], ['B', 11], ['C', 12] ]\r\n\r\n  Prawn::Document.generate('test.pdf') do\r\n    text 'Graph Example'\r\n    bar_graph data, at: [10,20], width: 200\r\n  end\r\n```\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `rake spec` to run the tests. You can\r\nalso  run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the \r\nversion number in `version.rb`, and then run `bundle exec rake release`, which will create a git tag for the version, \r\npush git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome [on GitHub][2]. This project is intended to be a \r\nsafe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) \r\ncode of conduct.\r\n\r\n## License\r\n\r\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\r\n\r\n\r\n[1]: https://github.com/mogest/prawn-svg/\r\n[2]: https://github.com/hhry/prawn-graph/issues/\r\n[3]: http://www.allm.net/\r\n[4]: http://www.allm.net/en/\r\n[5]: http://github.com/prawnpdf/prawn/\r\n[6]: https://github.com/mogest/",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}